@model dynamic
@{
    ViewData["Title"] = "Página Principal";
     var tipo = Model.GetType().Name;

    bool HasProperty(object obj, string propertyName)
    {
        return obj.GetType().GetProperty(propertyName) != null;
    }
}

<div class="app-container">
    <!-- Encabezado con logo y título -->
    <header class="app-header">
        <div class="header-content">
            <img src="https://i.imgur.com/VbIX2Ld.png" alt="Logo Ñuke Mapu Peuma" class="logo">
        </div>
    </header>

    <!-- Sección de búsqueda mejorada -->
    <section class="search-section">
        <h2 class="search-title">Buscar producto:</h2>
        <div class="search-box">
            <input type="text" id="searchInput" placeholder="Ingrese nombre del producto..." class="search-input">
            <button onclick="search()" class="search-button">
                <i class="fas fa-search"></i> Buscar
            </button>
        </div>
        <div id="searchResults" class="results-container">
            <!-- Los resultados aparecerán aquí -->
        </div>
    </section>

<!-- prueba  -->
    <h2> Vista notificaciones</h2>
    @if (Model != null && Model.Any()) 
        {
            @foreach (var tipo in Model)
        {
           <tr>
                <td>@item.Nombre</td>
                <td class="cantidad">@item.Cantidad</td>
                <td class="estado"></td>
            </tr>
        }
                }

@*
    <!-- Pie de página -->
    <footer class="app-footer">
        <p>
            
        </p>
    </footer>
</div>
*@



<!-- Script mejorado -->
<script>
    // Función de búsqueda mejorada con manejo de errores
    async function search() {
        const query = document.getElementById("searchInput").value.trim();
        const resultsContainer = document.getElementById("searchResults");

        if (!query) {
            resultsContainer.innerHTML = '<div class="result-item">Por favor, ingrese un término de búsqueda</div>';
            return;
        }

        // Mostrar estado de carga
        resultsContainer.innerHTML = '<div class="result-item"><i class="fas fa-spinner fa-spin"></i> Buscando productos...</div>';

        try {
            const response = await fetch(`/api/Producto/buscar?query=${encodeURIComponent(query)}`);

            if (!response.ok) {
                throw new Error('Error en la búsqueda');
            }

            const data = await response.json();

            if (data.length === 0) {
                resultsContainer.innerHTML = '<div class="result-item">No se encontraron resultados para "' + query + '"</div>';
            } else {
                let html = '';
                data.forEach(item => {
                    html += `
                        <div class="result-item">
                            <span>${item.nombre}</span>
                            <button class="search-button" onclick="showDetails(${item.id}, '${item.tipo}')">
                            <i class="fas fa-search"></i> Detalles
                            </button>
                        </div>
                    `;
                });
                resultsContainer.innerHTML = html;
            }
        } catch (error) {
            resultsContainer.innerHTML = '<div class="result-item">Error al realizar la búsqueda. Intente nuevamente.</div>';
            console.error('Error:', error);
        }
    }

    // Función para mostrar detalles (puedes implementarla según tus necesidades)
    function showDetails(id, tipo) {
        window.location.href = `/Producto/Detalle/${id}?tipo=${tipo}`;
    }


    // Permitir búsqueda al presionar Enter
    document.getElementById("searchInput").addEventListener("keypress", function (event) {
        if (event.key === "Enter") {
            search();
        }
    });
</script>

<script>
    $(document).ready(function () {
        $('#tablaProductos tbody tr').each(function () {
            var cantidad = parseInt($(this).find('.cantidad').text());

            if (cantidad < 2) {
                $(this).find('.estado').html('<span style="color: red;">¡Pocas unidades!</span>');
            } else {
                $(this).find('.estado').text('Disponible');
            }
        });
    });
</script>


